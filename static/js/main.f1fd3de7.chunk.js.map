{"version":3,"sources":["components/Display.js","components/Buttons.js","Stopwatch.js","App.js","index.js"],"names":["Display","time","Math","floor","slice","Buttons","start","stop","reset","wait","watchOn","className","onClick","Stopwatch","useState","setTime","setWatchOn","useEffect","unsubscribe","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","handleStart","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAYeA,MAVf,YAA4B,IAATC,EAAQ,EAARA,KACjB,OACE,gCACE,gCAAQ,IAAMC,KAAKC,MAAOF,EAAO,KAAU,KAAKG,OAAO,KADzD,YAEE,gCAAQ,IAAMF,KAAKC,MAAOF,EAAO,IAAQ,KAAKG,OAAO,KAFvD,YAGE,gCAAQ,IAAMF,KAAKC,MAAOF,EAAO,IAAO,KAAKG,OAAO,SCkB3CC,MAvBf,YAAyD,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC3C,OACE,gCACE,wBACEC,UAAWD,EAAU,UAAY,wCACjCE,QAASN,EAFX,mBAKA,wBACEK,UAAWD,EAAU,uCAAyC,UAC9DE,QAASL,EAFX,kBAKA,wBAAQI,UAAU,oCAAoCC,QAASJ,EAA/D,mBAGA,wBAAQG,UAAU,oCAAoCC,QAASH,EAA/D,uBCuDSI,MAjEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOJ,EAAP,KAAgBM,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAc,IAAIC,IAQxB,OAPAC,YAAS,IACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLb,GACFK,GAAQ,SAACS,GAAD,OAASA,EAAM,QAGtB,WACLN,EAAYO,OACZP,EAAYQ,cAEb,CAAChB,IAEJ,IAAMiB,EAAc,WAClBX,GAAW,IAwBb,OACE,qBAAKL,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,4DAAf,UACE,qBAAKA,UAAU,QAAf,uBACA,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,CAASV,KAAMA,IACf,cAAC,EAAD,CACEK,MAAOqB,EACPpB,KA9BO,WACJ,IAATN,GACFe,GAAW,IA6BHR,MAzBQ,WAClBO,EAAQ,GACRC,GAAW,GACE,IAATf,GACF0B,KAsBQlB,KAlBO,WACJ,IAATR,IACFe,GAAW,GACXD,EAAQ,KAgBAL,QAASA,eCpDRkB,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCFNkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f1fd3de7.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Display({ time }) {\n  return (\n    <div>\n      <span>{('0' + Math.floor((time / 360000) % 60)).slice(-2)}</span>&nbsp;:&nbsp;\n      <span>{('0' + Math.floor((time / 6000) % 60)).slice(-2)}</span>&nbsp;:&nbsp;\n      <span>{('0' + Math.floor((time / 100) % 60)).slice(-2)}</span>\n    </div>\n  );\n}\n\nexport default Display;\n","import React from 'react';\n\nfunction Buttons({ start, stop, reset, wait, watchOn }) {\n  return (\n    <div>\n      <button\n        className={watchOn ? 'display' : 'btn btn-outline-success btn-lg  mybtn'}\n        onClick={start}>\n        Start\n      </button>\n      <button\n        className={watchOn ? 'btn btn-outline-danger btn-lg  mybtn' : 'display'}\n        onClick={stop}>\n        Stop\n      </button>\n      <button className=\"btn btn-outline-info mybtn btn-lg\" onClick={reset}>\n        Reset\n      </button>\n      <button className=\"btn btn-outline-info mybtn btn-lg\" onClick={wait}>\n        Clear\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport Display from './components/Display';\nimport Buttons from './components/Buttons';\n\nfunction Stopwatch() {\n  const [time, setTime] = useState(0);\n  const [watchOn, setWatchOn] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = new Subject();\n    interval(10)\n      .pipe(takeUntil(unsubscribe))\n      .subscribe(() => {\n        if (watchOn) {\n          setTime((val) => val + 1);\n        }\n      });\n    return () => {\n      unsubscribe.next();\n      unsubscribe.complete();\n    };\n  }, [watchOn]);\n\n  const handleStart = () => {\n    setWatchOn(true);\n  };\n\n  const handleStop = () => {\n    if (time !== 0) {\n      setWatchOn(false);\n    }\n  };\n\n  const handleReset = () => {\n    setTime(0);\n    setWatchOn(false);\n    if (time !== 0) {\n      handleStart();\n    }\n  };\n\n  const handleWait = () => {\n    if (time !== 0) {\n      setWatchOn(false);\n      setTime(0);\n    }\n  };\n\n  return (\n    <div className=\"App \">\n      <div className=\"main-section\">\n        <div className=\"holder position-absolute top-50 start-50 translate-middle\">\n          <div className=\"title\">Stopwatch</div>\n          <div className=\"timer\">\n            <Display time={time} />\n            <Buttons\n              start={handleStart}\n              stop={handleStop}\n              reset={handleReset}\n              wait={handleWait}\n              watchOn={watchOn}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n","import './App.css';\n\nimport Stopwatch from './Stopwatch';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stopwatch />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}